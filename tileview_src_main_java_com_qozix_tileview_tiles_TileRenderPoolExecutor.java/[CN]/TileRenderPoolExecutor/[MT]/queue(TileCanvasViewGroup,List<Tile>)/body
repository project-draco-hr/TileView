{
  Log.d("DEBUG","TileRenderPoolExecutor.queue, before intersection: " + mExecutingTileRenderTasks.size() + ", "+ mCancelledTileRenderTasks.size());
  for (  TileRenderTask tileRenderTask : mExecutingTileRenderTasks) {
    if (renderList.contains(tileRenderTask.tile)) {
      renderList.remove(tileRenderTask.tile);
    }
 else {
      mCancelledTileRenderTasks.add(tileRenderTask);
    }
  }
  Log.d("DEBUG","TileRenderPoolExecutor.queue, after intersection: " + mExecutingTileRenderTasks.size() + ", "+ mCancelledTileRenderTasks.size());
  stopCancelledTasks();
  if (renderList.size() > 0) {
    mTileCanvasViewGroupWeakReference=new WeakReference<>(tileCanvasViewGroup);
    tileCanvasViewGroup.onRenderTaskPreExecute();
    for (    Tile tile : renderList) {
      if (isShutdownOrTerminating()) {
        return;
      }
      TileRenderTask task=new TileRenderTask();
      task.tile=tile;
      task.runnable=new TileRenderRunnable();
      task.runnable.setTile(tile);
      task.runnable.setTileCanvasViewGroup(tileCanvasViewGroup);
      task.runnable.setTileRenderPoolExecutor(this);
      task.future=submit(task.runnable);
      mExecutingTileRenderTasks.add(task);
    }
  }
}
