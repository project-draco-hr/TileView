{
  double relativeScale=getRelativeScale();
  int drawableWidth=(int)(mDetailManager.getWidth() * getScale() * relativeScale);
  int drawableHeight=(int)(mDetailManager.getHeight() * getScale() * relativeScale);
  double offsetWidth=(mTileWidth * relativeScale);
  double offsetHeight=(mTileHeight * relativeScale);
  LinkedList<Tile> intersections=new LinkedList<Tile>();
  mViewport.set(mDetailManager.getComputedViewport());
  mViewport.top=Math.max(mViewport.top,0);
  mViewport.left=Math.max(mViewport.left,0);
  mViewport.right=Math.min(mViewport.right,drawableWidth);
  mViewport.bottom=Math.min(mViewport.bottom,drawableHeight);
  int startingRow=(int)Math.floor(mViewport.top / offsetHeight);
  int endingRow=(int)Math.ceil(mViewport.bottom / offsetHeight);
  int startingColumn=(int)Math.floor(mViewport.left / offsetWidth);
  int endingColumn=(int)Math.ceil(mViewport.right / offsetWidth);
  for (int iterationRow=startingRow; iterationRow < endingRow; iterationRow++) {
    for (int iterationColumn=startingColumn; iterationColumn < endingColumn; iterationColumn++) {
      Tile tile=new Tile(iterationRow,iterationColumn,mTileWidth,mTileHeight,mData);
      intersections.add(tile);
    }
  }
  return intersections;
}
