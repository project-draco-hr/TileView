{
  super.onCreate(savedInstanceState);
  tileView=new TileView(this);
  tileView.setSize(8967,6726);
  tileView.setBackgroundColor(0xFFe7e7e7);
  tileView.addDetailLevel(0.1250f,"tiles/map/phi-62500-%d_%d.jpg");
  tileView.addDetailLevel(0.2500f,"tiles/map/phi-125000-%d_%d.jpg");
  tileView.addDetailLevel(0.5000f,"tiles/map/phi-250000-%d_%d.jpg");
  tileView.addDetailLevel(1.0000f,"tiles/map/phi-500000-%d_%d.jpg");
  tileView.setMarkerAnchorPoints(-0.5f,-1.0f);
  tileView.defineBounds(NORTH_WEST_LONGITUDE,NORTH_WEST_LATITUDE,SOUTH_EAST_LONGITUDE,SOUTH_EAST_LATITUDE);
  DisplayMetrics metrics=getResources().getDisplayMetrics();
  Paint paint=tileView.getPathPaint();
  paint.setShadowLayer(TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,4,metrics),TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,2,metrics),TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,2,metrics),0x66000000);
  paint.setColor(0x883399FF);
  paint.setStrokeWidth(TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,4,metrics));
  paint.setPathEffect(new CornerPathEffect(TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,5,metrics)));
  tileView.drawPath(points.subList(1,5),null);
  for (  double[] point : points) {
    ImageView marker=new ImageView(this);
    marker.setTag(point);
    marker.setImageResource(Math.random() < 0.75 ? R.drawable.map_marker_normal : R.drawable.map_marker_featured);
    tileView.addMarker(marker,point[0],point[1],null,null);
  }
  tileView.setMarkerTapListener(markerTapListener);
  tileView.setTransitionsEnabled(false);
  ImageView downsample=new ImageView(this);
  downsample.setImageResource(R.drawable.downsample);
  RelativeLayout contentView=new RelativeLayout(this);
  contentView.addView(tileView);
  Button button=new Button(this);
  button.setText("ZoomAndScale");
  RelativeLayout.LayoutParams buttonLayoutParams=new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);
  buttonLayoutParams.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);
  buttonLayoutParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
  contentView.addView(button,buttonLayoutParams);
  button.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      double[] spot=points.get(0);
      tileView.slideToAndCenterWithScale(spot[0],spot[1],0.5f);
    }
  }
);
  HotSpot hotSpot=new HotSpot();
  hotSpot.set(new Rect(0,0,100,100));
  tileView.addHotSpot(hotSpot);
  tileView.setHotSpotTapListener(new HotSpot.HotSpotTapListener(){
    @Override public void onHotSpotTap(    HotSpot hotSpot,    int x,    int y){
      Log.d("TileView","hot spot tapped");
    }
  }
);
  setContentView(contentView);
}
