{
  renderList.removeAll(mCurrentRenderingTiles);
  mCurrentRenderingTiles.addAll(renderList);
  cancel();
  if (renderList.size() > 0) {
    mTileCanvasViewGroupWeakReference=new WeakReference<>(tileCanvasViewGroup);
    tileCanvasViewGroup.onRenderTaskPreExecute();
    for (    Tile tile : renderList) {
      if (mTileRenderThreadPoolExecutor.isShutdownOrTerminating()) {
        return;
      }
      TileRenderRunnable tileRenderRunnable=new TileRenderRunnable(tileCanvasViewGroup,tile);
      tileRenderRunnable.setTileRenderRunnableCompleteListener(mTileRenderRunnableCompleteListener);
      Future future=mTileRenderThreadPoolExecutor.submit(tileRenderRunnable);
      mFutureTileRenderRunnableHashMap.put(future,tileRenderRunnable);
    }
  }
}
